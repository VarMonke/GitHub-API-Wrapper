[tool.poetry]
name = "github"
version = "2.0.0a"
description = "Easy to use Python wrapper for the GitHub API."
authors = [ "VarMonke", "sudosnok", "contributors" ]
readme = "README.md"
license = "MIT"
repository = "https://github.com/Varmonke/GitHub-API-Wrapper"
packages = [
    { include = "github" }
]
keywords = [ "github", "sync", "async", "github-api" ]
classifiers = [
    "Typing :: Typed",
    "License :: OSI Approved :: MIT License",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/Varmonke/GitHub-API-Wrapper/issues"

[tool.poetry.dependencies]
python = "^3.8"
aiohttp = "^3.8.1"
typing-extensions = "*"

[tool.poetry.dev-dependencies]
black = "*"
flynt = "*"
isort = "*"
unimport = "*"

[tool.black]
line-length = 100
preview = true  # better formatting basically

[tool.isort]
py_version = 38
line_length = 100
combine_as_imports = true
combine_star = true

[tool.pyright]
pythonVersion = "3.8"
include = [
    "github",
]
exclude = [
    "**/__pycache__",
    "build",
    "dist",
    "docs",
    "venv",
    "setup.py"
]
typeCheckingMode = "basic"
strictListInference = true
strictDictionaryInference = true
strictSetInference = true

# explicity enabling is better than making it strict and disabling stuff
reportMissingModuleSource = "error"
reportAssertAlwaysTrue = "error"
reportInvalidStringEscapeSequence = "error"
reportInvalidTypeVarUse = "error"
reportSelfClsParameterName = "error"
reportUnsupportedDunderAll = "error"
reportUnusedExpression = "error"
reportWildcardImportFromLibrary = "error"
reportConstantRedefinition = "error"
reportDuplicateImport = "error"
reportImportCycles = "error"
reportIncompatibleVariableOverride = "error"
reportIncompleteStub = "error"
reportInconsistentConstructor = "error"
reportInvalidStubStatement = "error"
reportMatchNotExhaustive = "error"
reportMissingParameterType = "error"
reportTypeCommentUsage = "error"
reportUnnecessaryCast = "error"
reportUnnecessaryComparison = "error"
reportUnnecessaryIsInstance = "error"
reportUnusedClass = "error"
reportUnusedVariable = "error"
reportUntypedBaseClass = "error"
reportUntypedClassDecorator = "error"
reportUntypedFunctionDecorator = "error"
reportUntypedNamedTuple = "error"
reportCallInDefaultInitializer = "error"
reportPropertyTypeMismatch = "error"
reportUnnecessaryTypeIgnoreComment = "error"
